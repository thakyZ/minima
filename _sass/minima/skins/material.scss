@charset "utf-8";

// Material skin
// ==============
// Created by Neko Boi Nick <mailto:nekoboinick@gmail.com> using the Solarized
// color scheme by Ali Naderi <https://github.com/naderi/material-theme-for-npp/>.

// This style sheet implements two options for the minima.skin setting:
// "material" for light mode and "material-dark" for dark mode.
$mat-is-dark: false !default;


// Color scheme
// ------------
// The inline comments show the canonical H*S*B values for each color.

$mat-background:      #EEEEEE; // 00  00  93
$mat-foreground:      #212121; // 00  00  13
$mat-color-brand:     $mat-background;
$mat-light-brand:     darken($mat-foreground, 25%);
$mat-dark-brand:      #212121; // 00  00  13
$mat-code-two:        darken($mat-foreground, 25%);
$mat-code-three:      darken($mat-foreground, 40%);
$mat-code-background: #2E2E2E; // 00  00  18
$mat-code-foreground: #EEEEEE; // 00  00  93

// Colored items
// -------------
// The inline colors for colored text.
$mat-yellow:   #F9EE98;  // 53  39  98
$mat-orange:   #FFCB6B;  // 39  58 100
$mat-red:      #F78C6C;  // 14  56  97
$mat-magenta:  #C792EA;  //276  38  92
$mat-violet:   #CDA869;  // 38  49  80
$mat-blue:     #89DDFF;  //197  46 100
$mat-cyan:     #B2CCD6;  //197  17  84
$mat-green:    #C3E88D;  // 84  39  91

@if $mat-is-dark {
  $mat-background:      #212121; // 00  00  13
  $mat-foreground:      #EEEEEE; // 00  00  93
  $mat-color-brand:     $mat-background;
  $mat-light-brand:     lighten($mat-foreground, 25%);
  $mat-dark-brand:      darken($mat-foreground, 25%);
  $mat-code-background: #2E2E2E; // 00  00  18
  $mat-code-foreground: #EEEEEE; // 00  00  93
}

// Minima color variables
// ----------------------

$brand-color:           $mat-color-brand       !default;
$brand-color-light:     $mat-light-brand       !default;
$brand-color-dark:      $mat-dark-brand        !default;

$text-color:            $mat-foreground        !default;
$background-color:      $mat-background        !default;
$code-background-color: $mat-code-background   !default;
$code-text-color:       $mat-code-foreground   !default;

$link-base-color:       $mat-blue              !default;
$link-visited-color:    darken($mat-blue, 25%) !default;

$table-text-color:      $mat-foreground        !default;
$table-zebra-color:     $mat-light-brand       !default;
$table-header-bg-color: $mat-code-background   !default;
$table-header-border:   $mat-dark-brand        !default;
$table-border-color:    $mat-dark-brand        !default;


// Syntax highlighting styles
// --------------------------

.highlight {
  .c     { color: $mat-code-foreground; font-style: italic } // Comment
  .err   { color: $mat-red } // Error
  .k     { color: $mat-code-two; font-weight: bold } // Keyword
  .o     { color: $mat-code-two; font-weight: bold } // Operator
  .cm    { color: $mat-code-foreground; font-style: italic } // Comment.Multiline
  .cp    { color: $mat-code-foreground; font-weight: bold } // Comment.Preproc
  .c1    { color: $mat-code-foreground; font-style: italic } // Comment.Single
  .cs    { color: $mat-code-foreground; font-weight: bold; font-style: italic } // Comment.Special
  .gd    { color: $mat-red } // Generic.Deleted
  .gd .x { color: $mat-red } // Generic.Deleted.Specific
  .ge    { color: $mat-code-three; font-style: italic } // Generic.Emph
  .gr    { color: $mat-red } // Generic.Error
  .gh    { color: $mat-code-foreground } // Generic.Heading
  .gi    { color: $mat-green } // Generic.Inserted
  .gi .x { color: $mat-green } // Generic.Inserted.Specific
  .go    { color: $mat-code-foreground } // Generic.Output
  .gp    { color: $mat-code-foreground } // Generic.Prompt
  .gs    { color: $mat-code-two; font-weight: bold } // Generic.Strong
  .gu    { color: $mat-code-foreground } // Generic.Subheading
  .gt    { color: $mat-red } // Generic.Traceback
  .kc    { color: $mat-code-foreground; font-weight: bold } // Keyword.Constant
  .kd    { color: $mat-code-foreground; font-weight: bold } // Keyword.Declaration
  .kp    { color: $mat-code-foreground; font-weight: bold } // Keyword.Pseudo
  .kr    { color: $mat-code-foreground; font-weight: bold } // Keyword.Reserved
  .kt    { color: $mat-violet; font-weight: bold } // Keyword.Type
  .m     { color: $mat-cyan } // Literal.Number
  .s     { color: $mat-magenta } // Literal.String
  .na    { color: $mat-cyan } // Name.Attribute
  .nb    { color: $mat-blue } // Name.Builtin
  .nc    { color: $mat-violet; font-weight: bold } // Name.Class
  .no    { color: $mat-cyan } // Name.Constant
  .ni    { color: $mat-violet } // Name.Entity
  .ne    { color: $mat-violet; font-weight: bold } // Name.Exception
  .nf    { color: $mat-blue; font-weight: bold } // Name.Function
  .nn    { color: $mat-code-three } // Name.Namespace
  .nt    { color: $mat-blue } // Name.Tag
  .nv    { color: $mat-cyan } // Name.Variable
  .ow    { color: $mat-code-two; font-weight: bold } // Operator.Word
  .w     { color: $mat-code-foreground } // Text.Whitespace
  .mf    { color: $mat-cyan } // Literal.Number.Float
  .mh    { color: $mat-cyan } // Literal.Number.Hex
  .mi    { color: $mat-cyan } // Literal.Number.Integer
  .mo    { color: $mat-cyan } // Literal.Number.Oct
  .sb    { color: $mat-magenta } // Literal.String.Backtick
  .sc    { color: $mat-magenta } // Literal.String.Char
  .sd    { color: $mat-magenta } // Literal.String.Doc
  .s2    { color: $mat-magenta } // Literal.String.Double
  .se    { color: $mat-magenta } // Literal.String.Escape
  .sh    { color: $mat-magenta } // Literal.String.Heredoc
  .si    { color: $mat-magenta } // Literal.String.Interpol
  .sx    { color: $mat-magenta } // Literal.String.Other
  .sr    { color: $mat-green } // Literal.String.Regex
  .s1    { color: $mat-magenta } // Literal.String.Single
  .ss    { color: $mat-magenta } // Literal.String.Symbol
  .bp    { color: $mat-code-foreground } // Name.Builtin.Pseudo
  .vc    { color: $mat-cyan } // Name.Variable.Class
  .vg    { color: $mat-cyan } // Name.Variable.Global
  .vi    { color: $mat-cyan } // Name.Variable.Instance
  .il    { color: $mat-cyan } // Literal.Number.Integer.Long
}
